{"ast":null,"code":"var _jsxFileName = \"/Users/andrewgao/Desktop/Northwestern/finalproj/src/components/TopWords.jsx\";\n// TopWords.jsx\n\nimport React from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport './TopWords.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TopWords = ({\n  wordData\n}) => {\n  const colors = wordData.map((word, index) => `hsl(${index * 360 / wordData.length}, 75%, 60%)`); // Dynamic coloring\n\n  const data = {\n    labels: wordData.map(word => word.text),\n    datasets: [{\n      label: 'Word Frequency',\n      data: wordData.map(word => word.value),\n      backgroundColor: colors,\n      borderColor: colors.map(color => color.replace('60%', '50%')),\n      // Slightly darker border\n      borderWidth: 1,\n      hoverBackgroundColor: colors.map(color => color.replace('60%', '70%')),\n      // Lighter on hover\n      hoverBorderColor: colors.map(color => color.replace('60%', '40%'))\n    }]\n  };\n  const options = {\n    responsive: true,\n    scales: {\n      y: {\n        beginAtZero: true\n      }\n    },\n    plugins: {\n      legend: {\n        display: false // Hides the legend for a cleaner look\n      },\n\n      tooltip: {\n        backgroundColor: 'rgba(0,0,0,0.7)',\n        titleFont: {\n          size: 16\n        },\n        bodyFont: {\n          size: 14\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"top-words-chart\",\n    children: /*#__PURE__*/_jsxDEV(Bar, {\n      data: data,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_c = TopWords;\nexport default TopWords;\nvar _c;\n$RefreshReg$(_c, \"TopWords\");","map":{"version":3,"names":["React","Bar","jsxDEV","_jsxDEV","TopWords","wordData","colors","map","word","index","length","data","labels","text","datasets","label","value","backgroundColor","borderColor","color","replace","borderWidth","hoverBackgroundColor","hoverBorderColor","options","responsive","scales","y","beginAtZero","plugins","legend","display","tooltip","titleFont","size","bodyFont","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/andrewgao/Desktop/Northwestern/finalproj/src/components/TopWords.jsx"],"sourcesContent":["// TopWords.jsx\n\nimport React from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport './TopWords.css';\n\nconst TopWords = ({ wordData }) => {\n    const colors = wordData.map((word, index) => `hsl(${index * 360 / wordData.length}, 75%, 60%)`); // Dynamic coloring\n\n    const data = {\n        labels: wordData.map(word => word.text),\n        datasets: [{\n            label: 'Word Frequency',\n            data: wordData.map(word => word.value),\n            backgroundColor: colors,\n            borderColor: colors.map(color => color.replace('60%', '50%')), // Slightly darker border\n            borderWidth: 1,\n            hoverBackgroundColor: colors.map(color => color.replace('60%', '70%')), // Lighter on hover\n            hoverBorderColor: colors.map(color => color.replace('60%', '40%')),\n        }]\n    };\n\n    const options = {\n        responsive: true,\n        scales: {\n            y: {\n                beginAtZero: true\n            }\n        },\n        plugins: {\n            legend: {\n                display: false // Hides the legend for a cleaner look\n            },\n            tooltip: {\n                backgroundColor: 'rgba(0,0,0,0.7)',\n                titleFont: {\n                    size: 16\n                },\n                bodyFont: {\n                    size: 14\n                }\n            }\n        }\n    };\n\n    return (\n        <div className=\"top-words-chart\">\n            <Bar data={data} options={options} />\n        </div>\n    );\n};\n\nexport default TopWords;\n"],"mappings":";AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,QAAQ,iBAAiB;AACrC,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAC/B,MAAMC,MAAM,GAAGD,QAAQ,CAACE,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAM,OAAMA,KAAK,GAAG,GAAG,GAAGJ,QAAQ,CAACK,MAAO,aAAY,CAAC,CAAC,CAAC;;EAEjG,MAAMC,IAAI,GAAG;IACTC,MAAM,EAAEP,QAAQ,CAACE,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACK,IAAI,CAAC;IACvCC,QAAQ,EAAE,CAAC;MACPC,KAAK,EAAE,gBAAgB;MACvBJ,IAAI,EAAEN,QAAQ,CAACE,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACQ,KAAK,CAAC;MACtCC,eAAe,EAAEX,MAAM;MACvBY,WAAW,EAAEZ,MAAM,CAACC,GAAG,CAACY,KAAK,IAAIA,KAAK,CAACC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;MAAE;MAC/DC,WAAW,EAAE,CAAC;MACdC,oBAAoB,EAAEhB,MAAM,CAACC,GAAG,CAACY,KAAK,IAAIA,KAAK,CAACC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;MAAE;MACxEG,gBAAgB,EAAEjB,MAAM,CAACC,GAAG,CAACY,KAAK,IAAIA,KAAK,CAACC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC;IACrE,CAAC;EACL,CAAC;EAED,MAAMI,OAAO,GAAG;IACZC,UAAU,EAAE,IAAI;IAChBC,MAAM,EAAE;MACJC,CAAC,EAAE;QACCC,WAAW,EAAE;MACjB;IACJ,CAAC;IACDC,OAAO,EAAE;MACLC,MAAM,EAAE;QACJC,OAAO,EAAE,KAAK,CAAC;MACnB,CAAC;;MACDC,OAAO,EAAE;QACLf,eAAe,EAAE,iBAAiB;QAClCgB,SAAS,EAAE;UACPC,IAAI,EAAE;QACV,CAAC;QACDC,QAAQ,EAAE;UACND,IAAI,EAAE;QACV;MACJ;IACJ;EACJ,CAAC;EAED,oBACI/B,OAAA;IAAKiC,SAAS,EAAC,iBAAiB;IAAAC,QAAA,eAC5BlC,OAAA,CAACF,GAAG;MAACU,IAAI,EAAEA,IAAK;MAACa,OAAO,EAAEA;IAAQ;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpC,CAAC;AAEd,CAAC;AAACC,EAAA,GA5CItC,QAAQ;AA8Cd,eAAeA,QAAQ;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}