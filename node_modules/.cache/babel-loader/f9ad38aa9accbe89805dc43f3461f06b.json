{"ast":null,"code":"var _jsxFileName = \"/Users/andrewgao/Desktop/Northwestern/finalproj/src/components/TextInputForm.jsx\";\nimport React, { useState } from 'react';\nimport './TextInputForm.css';\nconst TextInputForm = ({\n  onAnalysisComplete,\n  onTextChange\n}) => {\n  const [text, setText] = useState('');\n  const handleTextChange = e => {\n    const newText = e.target.value;\n    setText(newText);\n    onTextChange(newText); // Call the passed function with the new text\n  };\n\n  const callAPI = async inputText => {\n    try {\n      const myHeaders = new Headers();\n      myHeaders.append(\"Content-Type\", \"application/json\");\n      const raw = JSON.stringify({\n        \"text\": inputText\n      });\n      const requestOptions = {\n        method: 'POST',\n        headers: myHeaders,\n        body: raw,\n        redirect: 'follow'\n      };\n      const response = await fetch(\"https://eip9ikhrl0.execute-api.us-east-2.amazonaws.com/dev\", requestOptions);\n      const result = await response.json();\n      return result.body;\n    } catch (error) {\n      console.error('error', error);\n      return null; // Return null or an appropriate error response\n    }\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const comments = text.split('\\n').filter(comment => comment.trim() !== '');\n    const results = await Promise.all(comments.map(comment => callAPI(comment)));\n    onAnalysisComplete(results);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-input-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"input-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, \"Enter your text (one comment per line):\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"text-input\",\n    value: text,\n    onChange: handleTextChange // Update to use handleTextChange\n    ,\n    placeholder: \"Type your comments here...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"submit-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, \"Analyze Sentiment\")));\n};\nexport default TextInputForm;","map":{"version":3,"names":["React","useState","TextInputForm","onAnalysisComplete","onTextChange","text","setText","handleTextChange","e","newText","target","value","callAPI","inputText","myHeaders","Headers","append","raw","JSON","stringify","requestOptions","method","headers","body","redirect","response","fetch","result","json","error","console","handleSubmit","event","preventDefault","comments","split","filter","comment","trim","results","Promise","all","map","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","placeholder","type"],"sources":["/Users/andrewgao/Desktop/Northwestern/finalproj/src/components/TextInputForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './TextInputForm.css';\n\nconst TextInputForm = ({ onAnalysisComplete,onTextChange }) => {\n    const [text, setText] = useState('');\n    const handleTextChange = (e) => {\n        const newText = e.target.value;\n        setText(newText);\n        onTextChange(newText); // Call the passed function with the new text\n    };\n\n    const callAPI = async (inputText) => {\n        try {\n            const myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/json\");\n\n            const raw = JSON.stringify({ \"text\": inputText });\n            const requestOptions = {\n                method: 'POST',\n                headers: myHeaders,\n                body: raw,\n                redirect: 'follow'\n            };\n\n            const response = await fetch(\"https://eip9ikhrl0.execute-api.us-east-2.amazonaws.com/dev\", requestOptions);\n            const result = await response.json();\n            return result.body;\n        } catch (error) {\n            console.error('error', error);\n            return null; // Return null or an appropriate error response\n        }\n    }\n\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        const comments = text.split('\\n').filter(comment => comment.trim() !== '');\n        const results = await Promise.all(comments.map(comment => callAPI(comment)));\n        onAnalysisComplete(results); \n    };\n\n    return (\n        <div className=\"text-input-form\">\n            <form onSubmit={handleSubmit}>\n                <label className=\"input-label\">\n                    Enter your text (one comment per line):\n                </label>\n                <textarea \n            className=\"text-input\" \n            value={text} \n            onChange={handleTextChange} // Update to use handleTextChange\n            placeholder=\"Type your comments here...\" \n        />\n                <button type=\"submit\" className=\"submit-button\">Analyze Sentiment</button>\n            </form>\n        </div>\n    );\n};\n\nexport default TextInputForm;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,qBAAqB;AAE5B,MAAMC,aAAa,GAAGA,CAAC;EAAEC,kBAAkB;EAACC;AAAa,CAAC,KAAK;EAC3D,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAMM,gBAAgB,GAAIC,CAAC,IAAK;IAC5B,MAAMC,OAAO,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK;IAC9BL,OAAO,CAACG,OAAO,CAAC;IAChBL,YAAY,CAACK,OAAO,CAAC,CAAC,CAAC;EAC3B,CAAC;;EAED,MAAMG,OAAO,GAAG,MAAOC,SAAS,IAAK;IACjC,IAAI;MACA,MAAMC,SAAS,GAAG,IAAIC,OAAO,CAAC,CAAC;MAC/BD,SAAS,CAACE,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC;MAEpD,MAAMC,GAAG,GAAGC,IAAI,CAACC,SAAS,CAAC;QAAE,MAAM,EAAEN;MAAU,CAAC,CAAC;MACjD,MAAMO,cAAc,GAAG;QACnBC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAER,SAAS;QAClBS,IAAI,EAAEN,GAAG;QACTO,QAAQ,EAAE;MACd,CAAC;MAED,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4DAA4D,EAAEN,cAAc,CAAC;MAC1G,MAAMO,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MACpC,OAAOD,MAAM,CAACJ,IAAI;IACtB,CAAC,CAAC,OAAOM,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,OAAO,EAAEA,KAAK,CAAC;MAC7B,OAAO,IAAI,CAAC,CAAC;IACjB;EACJ,CAAC;;EAGD,MAAME,YAAY,GAAG,MAAOC,KAAK,IAAK;IAClCA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,MAAMC,QAAQ,GAAG7B,IAAI,CAAC8B,KAAK,CAAC,IAAI,CAAC,CAACC,MAAM,CAACC,OAAO,IAAIA,OAAO,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE,CAAC;IAC1E,MAAMC,OAAO,GAAG,MAAMC,OAAO,CAACC,GAAG,CAACP,QAAQ,CAACQ,GAAG,CAACL,OAAO,IAAIzB,OAAO,CAACyB,OAAO,CAAC,CAAC,CAAC;IAC5ElC,kBAAkB,CAACoC,OAAO,CAAC;EAC/B,CAAC;EAED,oBACIvC,KAAA,CAAA2C,aAAA;IAAKC,SAAS,EAAC,iBAAiB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC5BlD,KAAA,CAAA2C,aAAA;IAAMQ,QAAQ,EAAEpB,YAAa;IAAAc,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACzBlD,KAAA,CAAA2C,aAAA;IAAOC,SAAS,EAAC,aAAa;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,yCAExB,CAAC,eACRlD,KAAA,CAAA2C,aAAA;IACJC,SAAS,EAAC,YAAY;IACtBjC,KAAK,EAAEN,IAAK;IACZ+C,QAAQ,EAAE7C,gBAAiB,CAAC;IAAA;IAC5B8C,WAAW,EAAC,4BAA4B;IAAAR,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAC3C,CAAC,eACMlD,KAAA,CAAA2C,aAAA;IAAQW,IAAI,EAAC,QAAQ;IAACV,SAAS,EAAC,eAAe;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,mBAAyB,CACvE,CACL,CAAC;AAEd,CAAC;AAED,eAAehD,aAAa"},"metadata":{},"sourceType":"module"}