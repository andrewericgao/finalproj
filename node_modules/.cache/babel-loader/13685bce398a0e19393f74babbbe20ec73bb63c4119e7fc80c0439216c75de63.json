{"ast":null,"code":"import React,{useState}from'react';import'./TextInputForm.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const TextInputForm=_ref=>{let{onAnalysisComplete,onTextChange}=_ref;const[text,setText]=useState('');const handleTextChange=e=>{const newText=e.target.value;setText(newText);onTextChange(newText);};const callAPI=async inputText=>{try{const myHeaders=new Headers();myHeaders.append(\"Content-Type\",\"application/json\");const raw=JSON.stringify({\"text\":inputText});const requestOptions={method:'POST',headers:myHeaders,body:raw,redirect:'follow'};const response=await fetch(\"https://eip9ikhrl0.execute-api.us-east-2.amazonaws.com/dev\",requestOptions);const result=await response.json();return result.body;}catch(error){console.error('error',error);return null;}};const handleSubmit=async event=>{event.preventDefault();const comments=text.split('\\n').filter(comment=>comment.trim()!=='');const results=await Promise.all(comments.map(comment=>callAPI(comment)));onAnalysisComplete(results);};return/*#__PURE__*/_jsx(\"div\",{className:\"text-input-form\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"label\",{className:\"input-label\",children:\"Enter your text (one comment per line):\"}),/*#__PURE__*/_jsx(\"textarea\",{className:\"text-input\",value:text,onChange:handleTextChange,placeholder:\"Type your comments here...\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"submit-button\",children:\"Analyze Sentiment\"})]})});};export default TextInputForm;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","TextInputForm","_ref","onAnalysisComplete","onTextChange","text","setText","handleTextChange","e","newText","target","value","callAPI","inputText","myHeaders","Headers","append","raw","JSON","stringify","requestOptions","method","headers","body","redirect","response","fetch","result","json","error","console","handleSubmit","event","preventDefault","comments","split","filter","comment","trim","results","Promise","all","map","className","children","onSubmit","onChange","placeholder","type"],"sources":["/Users/andrewgao/Desktop/Northwestern/finalproj/src/components/TextInputForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './TextInputForm.css';\n\nconst TextInputForm = ({ onAnalysisComplete, onTextChange }) => {\n    const [text, setText] = useState('');\n\n    const handleTextChange = (e) => {\n        const newText = e.target.value;\n        setText(newText);\n        onTextChange(newText);\n    };\n\n    const callAPI = async (inputText) => {\n        try {\n            const myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/json\");\n\n            const raw = JSON.stringify({ \"text\": inputText });\n            const requestOptions = {\n                method: 'POST',\n                headers: myHeaders,\n                body: raw,\n                redirect: 'follow'\n            };\n\n            const response = await fetch(\"https://eip9ikhrl0.execute-api.us-east-2.amazonaws.com/dev\", requestOptions);\n            const result = await response.json();\n            return result.body;\n        } catch (error) {\n            console.error('error', error);\n            return null;\n        }\n    }\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        const comments = text.split('\\n').filter(comment => comment.trim() !== '');\n        const results = await Promise.all(comments.map(comment => callAPI(comment)));\n        onAnalysisComplete(results);\n    };\n\n    return (\n        <div className=\"text-input-form\">\n            <form onSubmit={handleSubmit}>\n                <label className=\"input-label\">Enter your text (one comment per line):</label>\n                <textarea \n                    className=\"text-input\" \n                    value={text} \n                    onChange={handleTextChange}\n                    placeholder=\"Type your comments here...\"\n                />\n                <button type=\"submit\" className=\"submit-button\">Analyze Sentiment</button>\n            </form>\n        </div>\n    );\n};\n\nexport default TextInputForm;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,qBAAqB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE7B,KAAM,CAAAC,aAAa,CAAGC,IAAA,EAA0C,IAAzC,CAAEC,kBAAkB,CAAEC,YAAa,CAAC,CAAAF,IAAA,CACvD,KAAM,CAACG,IAAI,CAAEC,OAAO,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CAEpC,KAAM,CAAAW,gBAAgB,CAAIC,CAAC,EAAK,CAC5B,KAAM,CAAAC,OAAO,CAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAC9BL,OAAO,CAACG,OAAO,CAAC,CAChBL,YAAY,CAACK,OAAO,CAAC,CACzB,CAAC,CAED,KAAM,CAAAG,OAAO,CAAG,KAAO,CAAAC,SAAS,EAAK,CACjC,GAAI,CACA,KAAM,CAAAC,SAAS,CAAG,GAAI,CAAAC,OAAO,CAAC,CAAC,CAC/BD,SAAS,CAACE,MAAM,CAAC,cAAc,CAAE,kBAAkB,CAAC,CAEpD,KAAM,CAAAC,GAAG,CAAGC,IAAI,CAACC,SAAS,CAAC,CAAE,MAAM,CAAEN,SAAU,CAAC,CAAC,CACjD,KAAM,CAAAO,cAAc,CAAG,CACnBC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAER,SAAS,CAClBS,IAAI,CAAEN,GAAG,CACTO,QAAQ,CAAE,QACd,CAAC,CAED,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,4DAA4D,CAAEN,cAAc,CAAC,CAC1G,KAAM,CAAAO,MAAM,CAAG,KAAM,CAAAF,QAAQ,CAACG,IAAI,CAAC,CAAC,CACpC,MAAO,CAAAD,MAAM,CAACJ,IAAI,CACtB,CAAE,MAAOM,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,OAAO,CAAEA,KAAK,CAAC,CAC7B,MAAO,KAAI,CACf,CACJ,CAAC,CAED,KAAM,CAAAE,YAAY,CAAG,KAAO,CAAAC,KAAK,EAAK,CAClCA,KAAK,CAACC,cAAc,CAAC,CAAC,CACtB,KAAM,CAAAC,QAAQ,CAAG7B,IAAI,CAAC8B,KAAK,CAAC,IAAI,CAAC,CAACC,MAAM,CAACC,OAAO,EAAIA,OAAO,CAACC,IAAI,CAAC,CAAC,GAAK,EAAE,CAAC,CAC1E,KAAM,CAAAC,OAAO,CAAG,KAAM,CAAAC,OAAO,CAACC,GAAG,CAACP,QAAQ,CAACQ,GAAG,CAACL,OAAO,EAAIzB,OAAO,CAACyB,OAAO,CAAC,CAAC,CAAC,CAC5ElC,kBAAkB,CAACoC,OAAO,CAAC,CAC/B,CAAC,CAED,mBACIzC,IAAA,QAAK6C,SAAS,CAAC,iBAAiB,CAAAC,QAAA,cAC5B5C,KAAA,SAAM6C,QAAQ,CAAEd,YAAa,CAAAa,QAAA,eACzB9C,IAAA,UAAO6C,SAAS,CAAC,aAAa,CAAAC,QAAA,CAAC,yCAAuC,CAAO,CAAC,cAC9E9C,IAAA,aACI6C,SAAS,CAAC,YAAY,CACtBhC,KAAK,CAAEN,IAAK,CACZyC,QAAQ,CAAEvC,gBAAiB,CAC3BwC,WAAW,CAAC,4BAA4B,CAC3C,CAAC,cACFjD,IAAA,WAAQkD,IAAI,CAAC,QAAQ,CAACL,SAAS,CAAC,eAAe,CAAAC,QAAA,CAAC,mBAAiB,CAAQ,CAAC,EACxE,CAAC,CACN,CAAC,CAEd,CAAC,CAED,cAAe,CAAA3C,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}