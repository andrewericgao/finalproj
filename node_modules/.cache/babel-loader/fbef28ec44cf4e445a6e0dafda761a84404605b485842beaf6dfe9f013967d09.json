{"ast":null,"code":"var _jsxFileName = \"/Users/andrewgao/Desktop/Northwestern/finalproj/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport TextInputForm from './components/TextInputForm';\nimport Banner from './components/Banner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [averageSentiment, setAverageSentiment] = useState(0);\n  const [totalComments, setTotalComments] = useState(0);\n  const handleAnalysisComplete = results => {\n    const validResults = results.filter(result => result != null);\n    setTotalComments(validResults.length);\n    const totalPositiveScore = validResults.reduce((acc, result) => {\n      // Parse the JSON string to get the actual object\n      const sentimentData = JSON.parse(result);\n      // Access the Positive score, ensuring that sentimentScore is defined\n      return acc + (sentimentData.sentimentScore ? sentimentData.sentimentScore.Positive : 0);\n    }, 0);\n    setAveragePositiveSentiment(validResults.length > 0 ? totalPositiveScore / validResults.length : 0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Text Sentiment Analysis Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Banner, {\n      averageSentiment: averageSentiment,\n      totalComments: totalComments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextInputForm, {\n      onAnalysisComplete: handleAnalysisComplete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 7\n  }, this);\n}\n_s(App, \"1fn5I7JlL45XSTyyGHxwkqMdc00=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","TextInputForm","Banner","jsxDEV","_jsxDEV","App","_s","averageSentiment","setAverageSentiment","totalComments","setTotalComments","handleAnalysisComplete","results","validResults","filter","result","length","totalPositiveScore","reduce","acc","sentimentData","JSON","parse","sentimentScore","Positive","setAveragePositiveSentiment","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onAnalysisComplete","_c","$RefreshReg$"],"sources":["/Users/andrewgao/Desktop/Northwestern/finalproj/src/App.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport TextInputForm from './components/TextInputForm';\nimport Banner from './components/Banner';\n\nfunction App() {\n  const [averageSentiment, setAverageSentiment] = useState(0);\n  const [totalComments, setTotalComments] = useState(0);\n\n    const handleAnalysisComplete = (results) => {\n      const validResults = results.filter(result => result != null);\n      setTotalComments(validResults.length);\n  \n      const totalPositiveScore = validResults.reduce((acc, result) => {\n          // Parse the JSON string to get the actual object\n          const sentimentData = JSON.parse(result);\n          // Access the Positive score, ensuring that sentimentScore is defined\n          return acc + (sentimentData.sentimentScore ? sentimentData.sentimentScore.Positive : 0);\n      }, 0);\n  \n      setAveragePositiveSentiment(validResults.length > 0 ? totalPositiveScore / validResults.length : 0);\n  }\n\n    return (\n      <div className=\"App\">\n      <h1>Text Sentiment Analysis Dashboard</h1>\n      <Banner averageSentiment={averageSentiment} totalComments={totalComments} />\n      <TextInputForm onAnalysisComplete={handleAnalysisComplete} />\n      {/* Include other components as needed */}\n  </div>\n    );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,MAAM,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EAC3D,MAAM,CAACS,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EAEnD,MAAMW,sBAAsB,GAAIC,OAAO,IAAK;IAC1C,MAAMC,YAAY,GAAGD,OAAO,CAACE,MAAM,CAACC,MAAM,IAAIA,MAAM,IAAI,IAAI,CAAC;IAC7DL,gBAAgB,CAACG,YAAY,CAACG,MAAM,CAAC;IAErC,MAAMC,kBAAkB,GAAGJ,YAAY,CAACK,MAAM,CAAC,CAACC,GAAG,EAAEJ,MAAM,KAAK;MAC5D;MACA,MAAMK,aAAa,GAAGC,IAAI,CAACC,KAAK,CAACP,MAAM,CAAC;MACxC;MACA,OAAOI,GAAG,IAAIC,aAAa,CAACG,cAAc,GAAGH,aAAa,CAACG,cAAc,CAACC,QAAQ,GAAG,CAAC,CAAC;IAC3F,CAAC,EAAE,CAAC,CAAC;IAELC,2BAA2B,CAACZ,YAAY,CAACG,MAAM,GAAG,CAAC,GAAGC,kBAAkB,GAAGJ,YAAY,CAACG,MAAM,GAAG,CAAC,CAAC;EACvG,CAAC;EAEC,oBACEZ,OAAA;IAAKsB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBACpBvB,OAAA;MAAAuB,QAAA,EAAI;IAAiC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1C3B,OAAA,CAACF,MAAM;MAACK,gBAAgB,EAAEA,gBAAiB;MAACE,aAAa,EAAEA;IAAc;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC5E3B,OAAA,CAACH,aAAa;MAAC+B,kBAAkB,EAAErB;IAAuB;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE5D,CAAC;AAER;AAACzB,EAAA,CA1BQD,GAAG;AAAA4B,EAAA,GAAH5B,GAAG;AA4BZ,eAAeA,GAAG;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}