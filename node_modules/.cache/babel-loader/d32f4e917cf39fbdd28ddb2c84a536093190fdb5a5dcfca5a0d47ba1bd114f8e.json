{"ast":null,"code":"var _jsxFileName = \"/Users/andrewgao/Desktop/Northwestern/finalproj/src/components/TopWords.jsx\";\nimport React from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport Sentiment from 'sentiment';\nimport './TopWords.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sentiment = new Sentiment();\nconst TopWords = ({\n  wordData\n}) => {\n  const sortedWordData = [...wordData].sort((a, b) => b.value - a.value);\n\n  // Function to determine the color based on sentiment score\n  const getSentimentColor = word => {\n    const result = sentiment.analyze(word);\n    if (result.score > 0) return '#49A54D'; // Positive sentiment\n    if (result.score < 0) return '#D32F2F'; // Negative sentiment\n    return '#FFC107'; // Neutral sentiment\n  };\n\n  const data = {\n    labels: sortedWordData.map(word => word.text),\n    datasets: [{\n      label: 'Word Frequency',\n      data: sortedWordData.map(word => word.value),\n      backgroundColor: sortedWordData.map(word => getSentimentColor(word.text)),\n      borderColor: 'rgba(0, 0, 0, 0.1)',\n      borderWidth: 3,\n      borderRadius: 5,\n      borderSkipped: false\n    }]\n  };\n  const options = {\n    indexAxis: 'y',\n    elements: {\n      bar: {\n        borderWidth: 2\n      }\n    },\n    responsive: true,\n    plugins: {\n      legend: {\n        display: false\n      },\n      tooltip: {\n        mode: 'index',\n        intersect: false\n      }\n    },\n    scales: {\n      x: {\n        beginAtZero: true,\n        title: {\n          display: true,\n          text: 'Frequency'\n        }\n      },\n      y: {\n        title: {\n          display: true,\n          text: 'Words'\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"top-words-chart\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-container\",\n      children: /*#__PURE__*/_jsxDEV(Bar, {\n        data: data,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n_c = TopWords;\nexport default TopWords;\nvar _c;\n$RefreshReg$(_c, \"TopWords\");","map":{"version":3,"names":["React","Bar","Sentiment","jsxDEV","_jsxDEV","sentiment","TopWords","wordData","sortedWordData","sort","a","b","value","getSentimentColor","word","result","analyze","score","data","labels","map","text","datasets","label","backgroundColor","borderColor","borderWidth","borderRadius","borderSkipped","options","indexAxis","elements","bar","responsive","plugins","legend","display","tooltip","mode","intersect","scales","x","beginAtZero","title","y","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/andrewgao/Desktop/Northwestern/finalproj/src/components/TopWords.jsx"],"sourcesContent":["import React from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport Sentiment from 'sentiment';\nimport './TopWords.css';\n\nconst sentiment = new Sentiment();\n\nconst TopWords = ({ wordData }) => {\n    const sortedWordData = [...wordData].sort((a, b) => b.value - a.value);\n\n    // Function to determine the color based on sentiment score\n    const getSentimentColor = (word) => {\n        const result = sentiment.analyze(word);\n        if (result.score > 0) return '#49A54D'; // Positive sentiment\n        if (result.score < 0) return '#D32F2F';   // Negative sentiment\n        return '#FFC107';                        // Neutral sentiment\n    };\n\n    const data = {\n        labels: sortedWordData.map(word => word.text),\n        datasets: [{\n            label: 'Word Frequency',\n            data: sortedWordData.map(word => word.value),\n            backgroundColor: sortedWordData.map(word => getSentimentColor(word.text)),\n            borderColor: 'rgba(0, 0, 0, 0.1)',\n            borderWidth: 3,\n            borderRadius: 5,\n            borderSkipped: false\n        }]\n    };\n\n    const options = {\n        indexAxis: 'y',\n        elements: {\n            bar: {\n                borderWidth: 2,\n            },\n        },\n        responsive: true,\n        plugins: {\n            legend: {\n                display: false\n            },\n            tooltip: {\n                mode: 'index',\n                intersect: false,\n            },\n        },\n        scales: {\n            x: {\n                beginAtZero: true,\n                title: {\n                    display: true,\n                    text: 'Frequency'\n                }\n            },\n            y: {\n                title: {\n                    display: true,\n                    text: 'Words'\n                }\n            }\n        }\n    };\n\n    return (\n        <div className=\"top-words-chart\">\n            <div className=\"chart-container\">\n                <Bar data={data} options={options} />\n            </div>\n        </div>\n    );\n};\n\nexport default TopWords;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,QAAQ,iBAAiB;AACrC,OAAOC,SAAS,MAAM,WAAW;AACjC,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,SAAS,GAAG,IAAIH,SAAS,CAAC,CAAC;AAEjC,MAAMI,QAAQ,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAC/B,MAAMC,cAAc,GAAG,CAAC,GAAGD,QAAQ,CAAC,CAACE,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACC,KAAK,GAAGF,CAAC,CAACE,KAAK,CAAC;;EAEtE;EACA,MAAMC,iBAAiB,GAAIC,IAAI,IAAK;IAChC,MAAMC,MAAM,GAAGV,SAAS,CAACW,OAAO,CAACF,IAAI,CAAC;IACtC,IAAIC,MAAM,CAACE,KAAK,GAAG,CAAC,EAAE,OAAO,SAAS,CAAC,CAAC;IACxC,IAAIF,MAAM,CAACE,KAAK,GAAG,CAAC,EAAE,OAAO,SAAS,CAAC,CAAG;IAC1C,OAAO,SAAS,CAAC,CAAwB;EAC7C,CAAC;;EAED,MAAMC,IAAI,GAAG;IACTC,MAAM,EAAEX,cAAc,CAACY,GAAG,CAACN,IAAI,IAAIA,IAAI,CAACO,IAAI,CAAC;IAC7CC,QAAQ,EAAE,CAAC;MACPC,KAAK,EAAE,gBAAgB;MACvBL,IAAI,EAAEV,cAAc,CAACY,GAAG,CAACN,IAAI,IAAIA,IAAI,CAACF,KAAK,CAAC;MAC5CY,eAAe,EAAEhB,cAAc,CAACY,GAAG,CAACN,IAAI,IAAID,iBAAiB,CAACC,IAAI,CAACO,IAAI,CAAC,CAAC;MACzEI,WAAW,EAAE,oBAAoB;MACjCC,WAAW,EAAE,CAAC;MACdC,YAAY,EAAE,CAAC;MACfC,aAAa,EAAE;IACnB,CAAC;EACL,CAAC;EAED,MAAMC,OAAO,GAAG;IACZC,SAAS,EAAE,GAAG;IACdC,QAAQ,EAAE;MACNC,GAAG,EAAE;QACDN,WAAW,EAAE;MACjB;IACJ,CAAC;IACDO,UAAU,EAAE,IAAI;IAChBC,OAAO,EAAE;MACLC,MAAM,EAAE;QACJC,OAAO,EAAE;MACb,CAAC;MACDC,OAAO,EAAE;QACLC,IAAI,EAAE,OAAO;QACbC,SAAS,EAAE;MACf;IACJ,CAAC;IACDC,MAAM,EAAE;MACJC,CAAC,EAAE;QACCC,WAAW,EAAE,IAAI;QACjBC,KAAK,EAAE;UACHP,OAAO,EAAE,IAAI;UACbf,IAAI,EAAE;QACV;MACJ,CAAC;MACDuB,CAAC,EAAE;QACCD,KAAK,EAAE;UACHP,OAAO,EAAE,IAAI;UACbf,IAAI,EAAE;QACV;MACJ;IACJ;EACJ,CAAC;EAED,oBACIjB,OAAA;IAAKyC,SAAS,EAAC,iBAAiB;IAAAC,QAAA,eAC5B1C,OAAA;MAAKyC,SAAS,EAAC,iBAAiB;MAAAC,QAAA,eAC5B1C,OAAA,CAACH,GAAG;QAACiB,IAAI,EAAEA,IAAK;QAACW,OAAO,EAAEA;MAAQ;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACC,EAAA,GAjEI7C,QAAQ;AAmEd,eAAeA,QAAQ;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}