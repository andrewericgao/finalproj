{"ast":null,"code":"var _jsxFileName = \"/Users/andrewgao/Desktop/Northwestern/finalproj/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport TextInputForm from './components/TextInputForm';\nimport Banner from './components/Banner';\nimport SentimentPieChart from './components/SentimentPieChart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [averagePositiveSentiment, setAveragePositiveSentiment] = useState(0);\n  const [totalComments, setTotalComments] = useState(0);\n  const [sentimentData, setSentimentData] = useState([0, 0, 0, 0]);\n  const handleAnalysisComplete = results => {\n    // let sentimentCounts = { Positive: 0, Negative: 0, Neutral: 0, Mixed: 0 };\n\n    // results.forEach(result => {\n    //     if (result) {\n    //         const sentimentData = JSON.parse(result); // Parse the JSON string\n    //         const highestSentiment = Object.keys(sentimentData.sentimentScore).reduce((a, b) => sentimentData.sentimentScore[a] > sentimentData.sentimentScore[b] ? a : b);\n    //         sentimentCounts[highestSentiment]++;\n    //     }\n    // });\n\n    const validResults = results.filter(result => result != null);\n    setTotalComments(validResults.length);\n    const totalPositiveScore = validResults.reduce((acc, result) => {\n      // Parse the JSON string to get the actual object\n      const sentimentData = JSON.parse(result);\n      // Access the Positive score, ensuring that sentimentScore is defined\n      return acc + (sentimentData.sentimentScore ? sentimentData.sentimentScore.Positive : 0);\n    }, 0);\n    setAveragePositiveSentiment(validResults.length > 0 ? totalPositiveScore / validResults.length : 0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Text Sentiment Analysis Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Banner, {\n      averageSentiment: averagePositiveSentiment,\n      totalComments: totalComments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextInputForm, {\n      onAnalysisComplete: handleAnalysisComplete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SentimentPieChart, {\n      sentimentData: sentimentData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 7\n  }, this);\n}\n_s(App, \"bAYSPMvch4/nVgGLQQmbFHRHPJI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","TextInputForm","Banner","SentimentPieChart","jsxDEV","_jsxDEV","App","_s","averagePositiveSentiment","setAveragePositiveSentiment","totalComments","setTotalComments","sentimentData","setSentimentData","handleAnalysisComplete","results","validResults","filter","result","length","totalPositiveScore","reduce","acc","JSON","parse","sentimentScore","Positive","className","children","fileName","_jsxFileName","lineNumber","columnNumber","averageSentiment","onAnalysisComplete","_c","$RefreshReg$"],"sources":["/Users/andrewgao/Desktop/Northwestern/finalproj/src/App.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport TextInputForm from './components/TextInputForm';\nimport Banner from './components/Banner';\nimport SentimentPieChart from './components/SentimentPieChart';\n\nfunction App() {\n    const [averagePositiveSentiment, setAveragePositiveSentiment] = useState(0);\n    const [totalComments, setTotalComments] = useState(0);\n    const [sentimentData, setSentimentData] = useState([0, 0, 0, 0]);\n\n    const handleAnalysisComplete = (results) => {\n      // let sentimentCounts = { Positive: 0, Negative: 0, Neutral: 0, Mixed: 0 };\n\n      // results.forEach(result => {\n      //     if (result) {\n      //         const sentimentData = JSON.parse(result); // Parse the JSON string\n      //         const highestSentiment = Object.keys(sentimentData.sentimentScore).reduce((a, b) => sentimentData.sentimentScore[a] > sentimentData.sentimentScore[b] ? a : b);\n      //         sentimentCounts[highestSentiment]++;\n      //     }\n      // });\n\n      const validResults = results.filter(result => result != null);\n      setTotalComments(validResults.length);\n  \n      const totalPositiveScore = validResults.reduce((acc, result) => {\n          // Parse the JSON string to get the actual object\n          const sentimentData = JSON.parse(result);\n          // Access the Positive score, ensuring that sentimentScore is defined\n          return acc + (sentimentData.sentimentScore ? sentimentData.sentimentScore.Positive : 0);\n      }, 0);\n  \n      setAveragePositiveSentiment(validResults.length > 0 ? totalPositiveScore / validResults.length : 0);\n  }\n\n    return (\n      <div className=\"App\">\n      <h1>Text Sentiment Analysis Dashboard</h1>\n      <Banner averageSentiment={averagePositiveSentiment} totalComments={totalComments} />\n      <TextInputForm onAnalysisComplete={handleAnalysisComplete} />\n      <SentimentPieChart sentimentData={sentimentData} /> {/* Pass the sentimentData state here */}\n      {/* Other components */}\n  </div>\n    );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,iBAAiB,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/D,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,wBAAwB,EAAEC,2BAA2B,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EAC3E,MAAM,CAACU,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EACrD,MAAM,CAACY,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;EAEhE,MAAMc,sBAAsB,GAAIC,OAAO,IAAK;IAC1C;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA,MAAMC,YAAY,GAAGD,OAAO,CAACE,MAAM,CAACC,MAAM,IAAIA,MAAM,IAAI,IAAI,CAAC;IAC7DP,gBAAgB,CAACK,YAAY,CAACG,MAAM,CAAC;IAErC,MAAMC,kBAAkB,GAAGJ,YAAY,CAACK,MAAM,CAAC,CAACC,GAAG,EAAEJ,MAAM,KAAK;MAC5D;MACA,MAAMN,aAAa,GAAGW,IAAI,CAACC,KAAK,CAACN,MAAM,CAAC;MACxC;MACA,OAAOI,GAAG,IAAIV,aAAa,CAACa,cAAc,GAAGb,aAAa,CAACa,cAAc,CAACC,QAAQ,GAAG,CAAC,CAAC;IAC3F,CAAC,EAAE,CAAC,CAAC;IAELjB,2BAA2B,CAACO,YAAY,CAACG,MAAM,GAAG,CAAC,GAAGC,kBAAkB,GAAGJ,YAAY,CAACG,MAAM,GAAG,CAAC,CAAC;EACvG,CAAC;EAEC,oBACEd,OAAA;IAAKsB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBACpBvB,OAAA;MAAAuB,QAAA,EAAI;IAAiC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1C3B,OAAA,CAACH,MAAM;MAAC+B,gBAAgB,EAAEzB,wBAAyB;MAACE,aAAa,EAAEA;IAAc;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACpF3B,OAAA,CAACJ,aAAa;MAACiC,kBAAkB,EAAEpB;IAAuB;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC7D3B,OAAA,CAACF,iBAAiB;MAACS,aAAa,EAAEA;IAAc;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,KAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEnD,CAAC;AAER;AAACzB,EAAA,CAtCQD,GAAG;AAAA6B,EAAA,GAAH7B,GAAG;AAwCZ,eAAeA,GAAG;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}