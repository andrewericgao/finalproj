{"ast":null,"code":"var _jsxFileName = \"/Users/andrewgao/Desktop/Northwestern/finalproj/src/components/TextInputForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './TextInputForm.css';\nimport { ReactComponent as UpArrowIcon } from './up-arrow-icon.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TextInputForm = ({\n  onAnalysisComplete,\n  onTextChange\n}) => {\n  _s();\n  const [text, setText] = useState('');\n  const [isTextEntered, setIsTextEntered] = useState(false);\n  const predefinedComments = {\n    positive: [\"Absolutely love this product, it's incredible!\", \"This service is outstanding, exceeded all my expectations.\", \"Highly satisfied with the results – a fantastic experience.\", \"Exceptional quality, very pleased with this purchase!\", \"Superb customer service, very responsive and helpful.\", \"Innovative features that have greatly enhanced my experience.\", \"Very user-friendly and efficient, a great tool for anyone.\", \"Remarkably effective, I'm seeing great results.\", \"This app has made my life so much easier, love it!\", \"Impressive performance, it's been a game changer for me.\"],\n    negative: [\"Unfortunately, the product did not meet my expectations.\", \"Quite disappointed with the lack of features.\", \"Experienced multiple issues, would not recommend.\", \"The product quality is subpar compared to others.\", \"Poor customer service, slow and unhelpful responses.\", \"It’s overpriced for what it offers, not a great deal.\", \"Found it hard to use and not user-friendly.\", \"The service was underwhelming and didn't deliver as promised.\", \"Had high hopes but was let down by the performance.\", \"Lacks the essential features I was looking for.\"],\n    neutral: [\"The product is okay, nothing particularly special.\", \"Average experience, nothing too impressive.\", \"It works fine, but I've seen better.\", \"The service is decent, but there’s room for improvement.\", \"An ordinary product, nothing out of the ordinary.\", \"Mediocre performance, was expecting something more.\", \"It's alright, but doesn't stand out from competitors.\", \"Neither good nor bad, just an average experience.\", \"Satisfactory but I'm not overly excited about it.\", \"It's functional, but lacks that wow factor.\"],\n    mixed: [\"Some features are great, but others need improvement.\", \"Impressed with the design, but the functionality could be better.\", \"Love the interface, though it can be glitchy at times.\", \"Has potential, but there are some frustrating aspects.\", \"Good in certain aspects, but disappointing in others.\", \"The concept is innovative, but the execution falls short.\", \"Parts of the service are excellent, others not so much.\", \"I appreciate some of the features, but others aren't useful.\", \"Shows promise, but needs refinement in several areas.\", \"A mix of high-quality and underdeveloped features.\"]\n  };\n  const handleTextChange = e => {\n    const newText = e.target.value;\n    setText(newText);\n    onTextChange(newText);\n    setIsTextEntered(newText.trim() !== '');\n  };\n  const handlePredefinedCommentClick = comment => {\n    setText(comment);\n    setIsTextEntered(true);\n    onTextChange(comment);\n  };\n  const callAPI = async inputText => {\n    try {\n      const myHeaders = new Headers();\n      myHeaders.append(\"Content-Type\", \"application/json\");\n      const raw = JSON.stringify({\n        \"text\": inputText\n      });\n      const requestOptions = {\n        method: 'POST',\n        headers: myHeaders,\n        body: raw,\n        redirect: 'follow'\n      };\n      const response = await fetch(\"https://eip9ikhrl0.execute-api.us-east-2.amazonaws.com/dev\", requestOptions);\n      const result = await response.json();\n      return result.body;\n    } catch (error) {\n      console.error('error', error);\n      return null;\n    }\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!isTextEntered) {\n      return;\n    }\n    const comments = text.split('\\n').filter(comment => comment.trim() !== '');\n    const results = await Promise.all(comments.map(comment => callAPI(comment)));\n    onAnalysisComplete(results);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-input-form\",\n    children: [!isTextEntered && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"predefined-comments-container\",\n      children: Object.entries(predefinedComments).map(([category, comments], index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"predefined-comment-category\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: category.charAt(0).toUpperCase() + category.slice(1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }, this), comments.map((comment, commentIndex) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"predefined-comment-button\",\n          onClick: () => handlePredefinedCommentClick(comment),\n          children: comment\n        }, commentIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 29\n        }, this))]\n      }, category, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"text-input\",\n        value: text,\n        onChange: handleTextChange,\n        placeholder: \"Enter your texts (one comment per line)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: `submit-button ${isTextEntered ? '' : 'inactive'}`,\n        children: /*#__PURE__*/_jsxDEV(UpArrowIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 9\n  }, this);\n};\n_s(TextInputForm, \"VNj6Z7JLurCVCQFKrG4Ix2PkxTA=\");\n_c = TextInputForm;\nexport default TextInputForm;\nvar _c;\n$RefreshReg$(_c, \"TextInputForm\");","map":{"version":3,"names":["React","useState","ReactComponent","UpArrowIcon","jsxDEV","_jsxDEV","TextInputForm","onAnalysisComplete","onTextChange","_s","text","setText","isTextEntered","setIsTextEntered","predefinedComments","positive","negative","neutral","mixed","handleTextChange","e","newText","target","value","trim","handlePredefinedCommentClick","comment","callAPI","inputText","myHeaders","Headers","append","raw","JSON","stringify","requestOptions","method","headers","body","redirect","response","fetch","result","json","error","console","handleSubmit","event","preventDefault","comments","split","filter","results","Promise","all","map","className","children","Object","entries","category","index","charAt","toUpperCase","slice","fileName","_jsxFileName","lineNumber","columnNumber","commentIndex","onClick","onSubmit","onChange","placeholder","type","_c","$RefreshReg$"],"sources":["/Users/andrewgao/Desktop/Northwestern/finalproj/src/components/TextInputForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './TextInputForm.css';\nimport { ReactComponent as UpArrowIcon } from './up-arrow-icon.svg';\n\nconst TextInputForm = ({ onAnalysisComplete, onTextChange }) => {\n    const [text, setText] = useState('');\n    const [isTextEntered, setIsTextEntered] = useState(false);\n\n    const predefinedComments = {\n        positive: [\n            \"Absolutely love this product, it's incredible!\",\n            \"This service is outstanding, exceeded all my expectations.\",\n            \"Highly satisfied with the results – a fantastic experience.\",\n            \"Exceptional quality, very pleased with this purchase!\",\n            \"Superb customer service, very responsive and helpful.\",\n            \"Innovative features that have greatly enhanced my experience.\",\n            \"Very user-friendly and efficient, a great tool for anyone.\",\n            \"Remarkably effective, I'm seeing great results.\",\n            \"This app has made my life so much easier, love it!\",\n            \"Impressive performance, it's been a game changer for me.\"\n        ],\n        negative: [\n            \"Unfortunately, the product did not meet my expectations.\",\n            \"Quite disappointed with the lack of features.\",\n            \"Experienced multiple issues, would not recommend.\",\n            \"The product quality is subpar compared to others.\",\n            \"Poor customer service, slow and unhelpful responses.\",\n            \"It’s overpriced for what it offers, not a great deal.\",\n            \"Found it hard to use and not user-friendly.\",\n            \"The service was underwhelming and didn't deliver as promised.\",\n            \"Had high hopes but was let down by the performance.\",\n            \"Lacks the essential features I was looking for.\",\n        ],\n        neutral: [\n            \"The product is okay, nothing particularly special.\",\n            \"Average experience, nothing too impressive.\",\n            \"It works fine, but I've seen better.\",\n            \"The service is decent, but there’s room for improvement.\",\n            \"An ordinary product, nothing out of the ordinary.\",\n            \"Mediocre performance, was expecting something more.\",\n            \"It's alright, but doesn't stand out from competitors.\",\n            \"Neither good nor bad, just an average experience.\",\n            \"Satisfactory but I'm not overly excited about it.\",\n            \"It's functional, but lacks that wow factor.\"\n        ],\n        mixed: [\n            \"Some features are great, but others need improvement.\",\n            \"Impressed with the design, but the functionality could be better.\",\n            \"Love the interface, though it can be glitchy at times.\",\n            \"Has potential, but there are some frustrating aspects.\",\n            \"Good in certain aspects, but disappointing in others.\",\n            \"The concept is innovative, but the execution falls short.\",\n            \"Parts of the service are excellent, others not so much.\",\n            \"I appreciate some of the features, but others aren't useful.\",\n            \"Shows promise, but needs refinement in several areas.\",\n            \"A mix of high-quality and underdeveloped features.\"\n        ]\n    };\n    \n\n    const handleTextChange = (e) => {\n        const newText = e.target.value;\n        setText(newText);\n        onTextChange(newText);\n        setIsTextEntered(newText.trim() !== '');\n    };\n\n    const handlePredefinedCommentClick = (comment) => {\n        setText(comment);\n        setIsTextEntered(true);\n        onTextChange(comment);\n    };\n\n    const callAPI = async (inputText) => {\n        try {\n            const myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/json\");\n\n            const raw = JSON.stringify({ \"text\": inputText });\n            const requestOptions = {\n                method: 'POST',\n                headers: myHeaders,\n                body: raw,\n                redirect: 'follow'\n            };\n\n            const response = await fetch(\"https://eip9ikhrl0.execute-api.us-east-2.amazonaws.com/dev\", requestOptions);\n            const result = await response.json();\n            return result.body;\n        } catch (error) {\n            console.error('error', error);\n            return null;\n        }\n    }\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        if (!isTextEntered) {\n            return;\n        }\n        const comments = text.split('\\n').filter(comment => comment.trim() !== '');\n        const results = await Promise.all(comments.map(comment => callAPI(comment)));\n        onAnalysisComplete(results);\n    };\n\n    return (\n        <div className=\"text-input-form\">\n        {!isTextEntered && (\n            <div className=\"predefined-comments-container\">\n                {Object.entries(predefinedComments).map(([category, comments], index) => (\n                    <div key={category} className=\"predefined-comment-category\">\n                        <h3>{category.charAt(0).toUpperCase() + category.slice(1)}</h3>\n                        {comments.map((comment, commentIndex) => (\n                            <button\n                                key={commentIndex}\n                                className=\"predefined-comment-button\"\n                                onClick={() => handlePredefinedCommentClick(comment)}\n                            >\n                                {comment}\n                            </button>\n                        ))}\n                    </div>\n                ))}\n            </div>\n        )}\n            <form onSubmit={handleSubmit}>\n                <textarea \n                    className=\"text-input\" \n                    value={text} \n                    onChange={handleTextChange}\n                    placeholder=\"Enter your texts (one comment per line)\"\n                />\n                <button type=\"submit\" className={`submit-button ${isTextEntered ? '' : 'inactive'}`}>\n                    <UpArrowIcon />\n                </button>\n            </form>\n        </div>\n    );\n};\n\nexport default TextInputForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}