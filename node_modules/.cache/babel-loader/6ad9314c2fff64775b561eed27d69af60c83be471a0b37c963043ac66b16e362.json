{"ast":null,"code":"var _jsxFileName = \"/Users/andrewgao/Desktop/Northwestern/finalproj/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport TextInputForm from './components/TextInputForm';\nimport Banner from './components/Banner';\nimport SentimentPieChart from './components/SentimentPieChart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [averagePositiveSentiment, setAveragePositiveSentiment] = useState(0);\n  const [totalComments, setTotalComments] = useState(0);\n  const sentimentData = [30, 10, 60];\n  const handleAnalysisComplete = results => {\n    let sentimentCounts = {\n      Positive: 0,\n      Negative: 0,\n      Neutral: 0,\n      Mixed: 0\n    };\n    results.forEach(result => {\n      if (result) {\n        const sentimentData = JSON.parse(result); // Parse the JSON string\n        const highestSentiment = Object.keys(sentimentData.sentimentScore).reduce((a, b) => sentimentData.sentimentScore[a] > sentimentData.sentimentScore[b] ? a : b);\n        sentimentCounts[highestSentiment]++;\n      }\n    });\n    const validResults = results.filter(result => result != null);\n    setTotalComments(validResults.length);\n    const totalPositiveScore = validResults.reduce((acc, result) => {\n      // Parse the JSON string to get the actual object\n      const sentimentData = JSON.parse(result);\n      // Access the Positive score, ensuring that sentimentScore is defined\n      return acc + (sentimentData.sentimentScore ? sentimentData.sentimentScore.Positive : 0);\n    }, 0);\n    setAveragePositiveSentiment(validResults.length > 0 ? totalPositiveScore / validResults.length : 0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Text Sentiment Analysis Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Banner, {\n      averageSentiment: averagePositiveSentiment,\n      totalComments: totalComments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextInputForm, {\n      onAnalysisComplete: handleAnalysisComplete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SentimentPieChart, {\n      sentimentData: sentimentData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), \"s\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"nnjEZMGSLW6x/28yhosWBNJ3tE4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","TextInputForm","Banner","SentimentPieChart","jsxDEV","_jsxDEV","App","_s","averagePositiveSentiment","setAveragePositiveSentiment","totalComments","setTotalComments","sentimentData","handleAnalysisComplete","results","sentimentCounts","Positive","Negative","Neutral","Mixed","forEach","result","JSON","parse","highestSentiment","Object","keys","sentimentScore","reduce","a","b","validResults","filter","length","totalPositiveScore","acc","className","children","fileName","_jsxFileName","lineNumber","columnNumber","averageSentiment","onAnalysisComplete","_c","$RefreshReg$"],"sources":["/Users/andrewgao/Desktop/Northwestern/finalproj/src/App.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport TextInputForm from './components/TextInputForm';\nimport Banner from './components/Banner';\nimport SentimentPieChart from './components/SentimentPieChart';\n\nfunction App() {\n    const [averagePositiveSentiment, setAveragePositiveSentiment] = useState(0);\n    const [totalComments, setTotalComments] = useState(0);\n    const sentimentData = [30, 10, 60];\n\n    const handleAnalysisComplete = (results) => {\n      let sentimentCounts = { Positive: 0, Negative: 0, Neutral: 0, Mixed: 0 };\n\n      results.forEach(result => {\n          if (result) {\n              const sentimentData = JSON.parse(result); // Parse the JSON string\n              const highestSentiment = Object.keys(sentimentData.sentimentScore).reduce((a, b) => sentimentData.sentimentScore[a] > sentimentData.sentimentScore[b] ? a : b);\n              sentimentCounts[highestSentiment]++;\n          }\n      });\n      \n      const validResults = results.filter(result => result != null);\n      setTotalComments(validResults.length);\n  \n      const totalPositiveScore = validResults.reduce((acc, result) => {\n          // Parse the JSON string to get the actual object\n          const sentimentData = JSON.parse(result);\n          // Access the Positive score, ensuring that sentimentScore is defined\n          return acc + (sentimentData.sentimentScore ? sentimentData.sentimentScore.Positive : 0);\n      }, 0);\n  \n      setAveragePositiveSentiment(validResults.length > 0 ? totalPositiveScore / validResults.length : 0);\n  }\n\n    return (\n        <div className=\"App\">\n            <h1>Text Sentiment Analysis Dashboard</h1>\n            <Banner averageSentiment={averagePositiveSentiment} totalComments={totalComments} />\n            <TextInputForm onAnalysisComplete={handleAnalysisComplete} />\n            <SentimentPieChart sentimentData={sentimentData} />s\n            {/* Other components */}\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}